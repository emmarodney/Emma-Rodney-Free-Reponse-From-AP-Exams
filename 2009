1) (a)
public static int [] getCubeTosses(NumberCube cube, int numTosses) {
int [] tempArr = new int[numTosses]; 
for(int i = 0; i<tempArr.lenght;i++){
		tempArr[i] = cube.toss(); 
}		
return tempArr;


}

(b) 
public static int getLongestRun (int [] values) {
int pos =0;
int counter = 0; 
int maxnum = 0;
int maxposstart = 0; 

for(int i =0; i< values.length; i++){
	if(values[i] = = values [ pos]{
counter ++;
}	
else{
	if(maxnum < counter){ 
		maxnum = counter; 
maxpos start = pos; 
}
		counter = 1;
		pos = i; }
		if(maxnum>1){
			return maxposstart
		}
		else{
			return -1; 
		}}



			counter++;
else
		counter = 1

}



3) (a)
private int getChargingCost (int startHour, int chargeTime) {
int cost = 0;
for (int i = 0; i< chargeTime; i++){
	int index = (startHour+i)%24;
	cost t = rateTable[index];
	}
return cost;
}



(b) 
public int getChargeStartTime (int chargeTime) {
int startTime = 0; int startCost = get charging Cost(0, chargetime); 
	for (int i = 0; i<24; i++){
		int currcost = getChargingCost(i, chargeTime);
		if(current cost < startcost){
			starttime = i;
			startcost = currentCost;
		}
	}
return startTime; 
}

